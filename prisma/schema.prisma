// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                String        @id @default(uuid())
  email             String        @unique
  name              String
  groups            GroupMember[] @relation("GroupMembers") // Groups the user is a member of
  createdGroups     Group[]       @relation("GroupCreator") // Groups the user has created
  transactionsPayer Transaction[] @relation("Payer")
  transactionsPayee Transaction[] @relation("Payee")
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
}

model Group {
  id           String        @id @default(uuid())
  name         String
  creatorId    String
  creator      User          @relation("GroupCreator", fields: [creatorId], references: [id])
  members      GroupMember[] @relation("GroupMembers")
  transactions Transaction[] @relation("GroupTransactions")
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model GroupMember {
  id        String   @id @default(uuid())
  groupId   String
  userId    String
  group     Group    @relation("GroupMembers", fields: [groupId], references: [id])
  user      User     @relation("GroupMembers", fields: [userId], references: [id])
  createdAt DateTime @default(now())

  @@unique([groupId, userId]) // Ensure no duplicate members in a group
}

model Transaction {
  id          String   @id @default(uuid())
  groupId     String?
  group       Group?   @relation("GroupTransactions", fields: [groupId], references: [id])
  payerId     String
  payeeId     String
  payer       User     @relation("Payer", fields: [payerId], references: [id])
  payee       User     @relation("Payee", fields: [payeeId], references: [id])
  amount      Float
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
